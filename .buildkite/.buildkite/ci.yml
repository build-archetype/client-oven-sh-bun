priority: 0
steps:
- 
    key: "darwin-aarch64-build-vendor"
    label: ":darwin: aarch64 - build-vendor"
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748056717609-73530aa2-16db-4e47-aac3-63a2c2149002"; then tart delete bun-build-1748056717609-73530aa2-16db-4e47-aac3-63a2c2149002 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717609-73530aa2-16db-4e47-aac3-63a2c2149002
    - tart run bun-build-1748056717609-73530aa2-16db-4e47-aac3-63a2c2149002 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748056717609-73530aa2-16db-4e47-aac3-63a2c2149002); echo "VM_IP: $VM_IP"; sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
    - buildkite-agent artifact upload vm.log || echo "No VM log to upload"
    - tart console bun-build-1748056717609-73530aa2-16db-4e47-aac3-63a2c2149002
  
- 
    key: "darwin-aarch64-build-cpp"
    label: ":darwin: aarch64 - build-cpp"
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_CPP_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748056717613-419143f9-cda2-4b07-a665-829318c65a30"; then tart delete bun-build-1748056717613-419143f9-cda2-4b07-a665-829318c65a30 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717613-419143f9-cda2-4b07-a665-829318c65a30
    - tart run bun-build-1748056717613-419143f9-cda2-4b07-a665-829318c65a30 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748056717613-419143f9-cda2-4b07-a665-829318c65a30) && echo "$VM_IP" && sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target bun'; sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
  
- 
    key: "darwin-aarch64-build-zig"
    label: ":darwin: aarch64 - build-zig"
    agents:
      os: linux
      arch: x64
      abi: musl
      distro: alpine
      release: 3.21
      robobun: true
      robobun2: true
      image-name: "linux-x64-321-alpine-musl-v10"
      instance-type: c7i.2xlarge
      cpu-count: 4
      threads-per-core: 1
      preemptible: false
      queue: darwin
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    timeout_in_minutes: 35
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e
    - tart run bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e" || echo "VM not found in list"
    - echo "--- 🏗 Building Zig"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e") 'cd ~/workspace/workspace && bun run build:release --target bun-zig --toolchain darwin-aarch64'
    - tart delete bun-build-1748056717618-2db4a7a4-1525-4b7b-b729-b8ed51fa0c9e
  
- 
    key: "darwin-aarch64-build-bun"
    label: ":darwin: aarch64 - build-bun"
    depends_on:
    - darwin-aarch64-build-cpp
    - darwin-aarch64-build-zig
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_LINK_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b
    - tart run bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b" || echo "VM not found in list"
    - echo "--- 🔗 Linking Bun"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b") 'cd ~/workspace/workspace && bun run build:release --target bun'
    - tart delete bun-build-1748056717621-b1d79d81-7150-4397-b208-a40523b32d7b
  
- 
    key: "darwin-x64-build-vendor"
    label: ":darwin: x64 - build-vendor"
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748056717624-7290efb2-6663-42b9-944e-eb7bc7c90bf3"; then tart delete bun-build-1748056717624-7290efb2-6663-42b9-944e-eb7bc7c90bf3 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717624-7290efb2-6663-42b9-944e-eb7bc7c90bf3
    - tart run bun-build-1748056717624-7290efb2-6663-42b9-944e-eb7bc7c90bf3 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748056717624-7290efb2-6663-42b9-944e-eb7bc7c90bf3); echo "VM_IP: $VM_IP"; sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
    - buildkite-agent artifact upload vm.log || echo "No VM log to upload"
    - tart console bun-build-1748056717624-7290efb2-6663-42b9-944e-eb7bc7c90bf3
  
- 
    key: "darwin-x64-build-cpp"
    label: ":darwin: x64 - build-cpp"
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_CPP_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748056717628-279cdd4e-bab9-4549-9d46-311400229c82"; then tart delete bun-build-1748056717628-279cdd4e-bab9-4549-9d46-311400229c82 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717628-279cdd4e-bab9-4549-9d46-311400229c82
    - tart run bun-build-1748056717628-279cdd4e-bab9-4549-9d46-311400229c82 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748056717628-279cdd4e-bab9-4549-9d46-311400229c82) && echo "$VM_IP" && sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target bun'; sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
  
- 
    key: "darwin-x64-build-zig"
    label: ":darwin: x64 - build-zig"
    agents:
      os: linux
      arch: x64
      abi: musl
      distro: alpine
      release: 3.21
      robobun: true
      robobun2: true
      image-name: "linux-x64-321-alpine-musl-v10"
      instance-type: c7i.2xlarge
      cpu-count: 4
      threads-per-core: 1
      preemptible: false
      queue: darwin
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    timeout_in_minutes: 35
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3
    - tart run bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3" || echo "VM not found in list"
    - echo "--- 🏗 Building Zig"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3") 'cd ~/workspace/workspace && bun run build:release --target bun-zig --toolchain darwin-x64'
    - tart delete bun-build-1748056717631-fc1fbc20-d858-4f5e-a16c-e2a997c02bf3
  
- 
    key: "darwin-x64-build-bun"
    label: ":darwin: x64 - build-bun"
    depends_on:
    - darwin-x64-build-cpp
    - darwin-x64-build-zig
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_LINK_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf
    - tart run bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf" || echo "VM not found in list"
    - echo "--- 🔗 Linking Bun"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf") 'cd ~/workspace/workspace && bun run build:release --target bun'
    - tart delete bun-build-1748056717634-f80892d7-1520-4c64-b522-eaa21571efdf
  
- 
    key: "darwin-aarch64-14-test-bun"
    label: ":darwin: 14 aarch64 - test-bun"
    depends_on:
    - darwin-aarch64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245
    - tart run bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-aarch64-build-bun'
    - tart delete bun-test-1748056717637-a0a6f575-d300-4900-9fe2-b2603df13245
  
- 
    key: "darwin-aarch64-13-test-bun"
    label: ":darwin: 13 aarch64 - test-bun"
    depends_on:
    - darwin-aarch64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d
    - tart run bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-aarch64-build-bun'
    - tart delete bun-test-1748056717640-50f22a15-f4cb-4af3-b74c-6a256ba6e11d
  
- 
    key: "darwin-x64-14-test-bun"
    label: ":darwin: 14 x64 - test-bun"
    depends_on:
    - darwin-x64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b
    - tart run bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-x64-build-bun'
    - tart delete bun-test-1748056717642-5a10f39e-795b-4462-9aec-ae286516f74b
  
- 
    key: "darwin-x64-13-test-bun"
    label: ":darwin: 13 x64 - test-bun"
    depends_on:
    - darwin-x64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c
    - tart run bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-x64-build-bun'
    - tart delete bun-test-1748056717645-7ff355fa-0ad1-4760-9962-bd41b7c8cd4c
  
- 
    key: release
    label: ":rocket:"
    agents:
      queue: darwin
    depends_on:
    - darwin-aarch64-build-bun
    - darwin-x64-build-bun
    env:
      CANARY: 1
    command: ".buildkite/scripts/upload-release.sh"
  
- 
    key: benchmark
    label: 📊
    agents:
      queue: darwin
    depends_on: "linux-x64-build-bun"
    command: "node .buildkite/scripts/upload-benchmark.mjs"
  
