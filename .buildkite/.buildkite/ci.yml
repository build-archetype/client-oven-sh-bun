priority: 0
steps:
- 
    key: "darwin-aarch64-build-vendor"
    label: ":darwin: aarch64 - build-vendor"
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748055672966-3b353c2a-023e-4110-958b-d9b52f413121"; then tart delete bun-build-1748055672966-3b353c2a-023e-4110-958b-d9b52f413121 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672966-3b353c2a-023e-4110-958b-d9b52f413121
    - tart run bun-build-1748055672966-3b353c2a-023e-4110-958b-d9b52f413121 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748055672966-3b353c2a-023e-4110-958b-d9b52f413121) && 
    - echo $VM_IP
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
    - buildkite-agent artifact upload vm.log || echo "No VM log to upload"
    - tart console bun-build-1748055672966-3b353c2a-023e-4110-958b-d9b52f413121
  
- 
    key: "darwin-aarch64-build-cpp"
    label: ":darwin: aarch64 - build-cpp"
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_CPP_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748055672970-06c6f257-2b12-477b-894f-0e688c1291f9"; then tart delete bun-build-1748055672970-06c6f257-2b12-477b-894f-0e688c1291f9 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672970-06c6f257-2b12-477b-894f-0e688c1291f9
    - tart run bun-build-1748055672970-06c6f257-2b12-477b-894f-0e688c1291f9 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748055672970-06c6f257-2b12-477b-894f-0e688c1291f9) && echo "$VM_IP" && sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target bun'
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
  
- 
    key: "darwin-aarch64-build-zig"
    label: ":darwin: aarch64 - build-zig"
    agents:
      os: linux
      arch: x64
      abi: musl
      distro: alpine
      release: 3.21
      robobun: true
      robobun2: true
      image-name: "linux-x64-321-alpine-musl-v10"
      instance-type: c7i.2xlarge
      cpu-count: 4
      threads-per-core: 1
      preemptible: false
      queue: darwin
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    timeout_in_minutes: 35
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464
    - tart run bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464" || echo "VM not found in list"
    - echo "--- 🏗 Building Zig"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464") 'cd ~/workspace/workspace && bun run build:release --target bun-zig --toolchain darwin-aarch64'
    - tart delete bun-build-1748055672974-f4df4c2d-13ea-4c93-a825-5193a9b98464
  
- 
    key: "darwin-aarch64-build-bun"
    label: ":darwin: aarch64 - build-bun"
    depends_on:
    - darwin-aarch64-build-cpp
    - darwin-aarch64-build-zig
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_LINK_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab
    - tart run bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab" || echo "VM not found in list"
    - echo "--- 🔗 Linking Bun"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab") 'cd ~/workspace/workspace && bun run build:release --target bun'
    - tart delete bun-build-1748055672978-4d9e1076-4f0a-469b-b251-35ac747672ab
  
- 
    key: "darwin-x64-build-vendor"
    label: ":darwin: x64 - build-vendor"
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748055672981-0c9eeddd-d8c1-4899-b73a-0138c82ac213"; then tart delete bun-build-1748055672981-0c9eeddd-d8c1-4899-b73a-0138c82ac213 || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672981-0c9eeddd-d8c1-4899-b73a-0138c82ac213
    - tart run bun-build-1748055672981-0c9eeddd-d8c1-4899-b73a-0138c82ac213 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748055672981-0c9eeddd-d8c1-4899-b73a-0138c82ac213) && 
    - echo $VM_IP
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
    - buildkite-agent artifact upload vm.log || echo "No VM log to upload"
    - tart console bun-build-1748055672981-0c9eeddd-d8c1-4899-b73a-0138c82ac213
  
- 
    key: "darwin-x64-build-cpp"
    label: ":darwin: x64 - build-cpp"
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_CPP_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart list | awk '/stopped/ && $1 == "local" && $2 ~ /^bun-/ {print $2}' | xargs -n1 tart delete || true
    - log stream --predicate 'process == "tart" OR process CONTAINS "Virtualization"' > tart.log 2>&1 &
    - TART_LOG_PID=$!
    - trap 'if [ -n "$TART_LOG_PID" ]; then kill $TART_LOG_PID 2>/dev/null || true; fi; if tart list | grep -q "bun-build-1748055672984-084c7ebc-ab58-4649-b823-1cd9ef90d46f"; then tart delete bun-build-1748055672984-084c7ebc-ab58-4649-b823-1cd9ef90d46f || true; fi; buildkite-agent artifact upload tart.log || true' EXIT
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672984-084c7ebc-ab58-4649-b823-1cd9ef90d46f
    - tart run bun-build-1748055672984-084c7ebc-ab58-4649-b823-1cd9ef90d46f --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - sleep 30
    - VM_IP=$(tart ip bun-build-1748055672984-084c7ebc-ab58-4649-b823-1cd9ef90d46f) && echo "$VM_IP" && sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target bun'
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$VM_IP 'cd ~/workspace/workspace && bun run build:release --target dependencies'
  
- 
    key: "darwin-x64-build-zig"
    label: ":darwin: x64 - build-zig"
    agents:
      os: linux
      arch: x64
      abi: musl
      distro: alpine
      release: 3.21
      robobun: true
      robobun2: true
      image-name: "linux-x64-321-alpine-musl-v10"
      instance-type: c7i.2xlarge
      cpu-count: 4
      threads-per-core: 1
      preemptible: false
      queue: darwin
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    timeout_in_minutes: 35
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f
    - tart run bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f" || echo "VM not found in list"
    - echo "--- 🏗 Building Zig"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f") 'cd ~/workspace/workspace && bun run build:release --target bun-zig --toolchain darwin-x64'
    - tart delete bun-build-1748055672988-18864dfa-8787-4771-b0c4-8f489260d85f
  
- 
    key: "darwin-x64-build-bun"
    label: ":darwin: x64 - build-bun"
    depends_on:
    - darwin-x64-build-cpp
    - darwin-x64-build-zig
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    env:
      BUN_LINK_ONLY: ON
      ENABLE_BASELINE: OFF
      ENABLE_CANARY: ON
      CANARY_REVISION: 1
      CMAKE_VERBOSE_MAKEFILE: ON
      CMAKE_TLS_VERIFY: 0
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e
    - tart run bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e" || echo "VM not found in list"
    - echo "--- 🔗 Linking Bun"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running build command..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e") 'cd ~/workspace/workspace && bun run build:release --target bun'
    - tart delete bun-build-1748055672990-fa20d732-27e7-49db-b5bf-94f322f0e38e
  
- 
    key: "darwin-aarch64-14-test-bun"
    label: ":darwin: 14 aarch64 - test-bun"
    depends_on:
    - darwin-aarch64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb
    - tart run bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-aarch64-build-bun'
    - tart delete bun-test-1748055672994-f6f6f9e6-0c80-4955-8f36-39dd61af45eb
  
- 
    key: "darwin-aarch64-13-test-bun"
    label: ":darwin: 13 aarch64 - test-bun"
    depends_on:
    - darwin-aarch64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: aarch64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c
    - tart run bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-aarch64-build-bun'
    - tart delete bun-test-1748055672997-c2199d39-75f4-40dd-9def-ada48b1e7d2c
  
- 
    key: "darwin-x64-14-test-bun"
    label: ":darwin: 14 x64 - test-bun"
    depends_on:
    - darwin-x64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad
    - tart run bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-x64-build-bun'
    - tart delete bun-test-1748055672999-dd6257a0-cd93-4f20-aa14-247c3b0987ad
  
- 
    key: "darwin-x64-13-test-bun"
    label: ":darwin: 13 x64 - test-bun"
    depends_on:
    - darwin-x64-build-bun
    agents:
      queue: darwin
      os: darwin
      arch: x64
      tart: true
    retry:
      manual:
        permit_on_passed: true
      automatic:
      - 
              exit_status: 1
              limit: 0
        
      - 
              exit_status: -1
              limit: 1
        
      - 
              exit_status: 255
              limit: 1
        
      - 
              signal_reason: cancel
              limit: 1
        
      - 
              signal_reason: agent_stop
              limit: 1
        
    cancel_on_build_failing: false
    parallelism: 2
    timeout_in_minutes: 30
    command:
    - tart clone ghcr.io/cirruslabs/macos-sequoia-base:latest bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89
    - tart run bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89 --no-graphics --dir=workspace:$PWD > vm.log 2>&1 &
    - echo "Waiting for VM to start up..."
    - sleep 60
    - echo "Checking VM status..."
    - tart list | grep "bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89" || echo "VM not found in list"
    - echo "--- 🧪 Testing"
    - echo "Waiting for VM to be healthy..."
    - attempt=1
    - max_attempts=5
    - while [ "$attempt" -le "$max_attempts" ]; do
    -   echo "[$attempt/$max_attempts] Checking VM health..."
    -   echo "VM status before health check:"
    -   tart list | grep "bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89" || echo "VM not found in list"
    -   echo "Attempting to connect to VM..."
    -   if sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89") echo "VM is healthy" > /dev/null 2>&1; then
    -     echo "VM is healthy"
    -     break
    -   fi
    -   echo "Connection failed. Checking VM status..."
    -   tart list | grep "bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89" || echo "VM not found in list"
    -   echo "VM log tail:"
    -   tail -n 20 vm.log || echo "No VM log found"
    -   if [ "$attempt" -eq "$max_attempts" ]; then
    -     echo "VM failed to become healthy after $max_attempts attempts"
    -     echo "Full VM log:"
    -     cat vm.log || echo "No VM log found"
    -     echo "System logs around VM:"
    -     log show --predicate 'process == "tart" OR process CONTAINS "Virtualization"' --last 5m || echo "No system logs found"
    -     exit 1
    -   fi
    -   echo "[$attempt/$max_attempts] VM not ready yet, waiting..."
    -   sleep 20
    -   attempt=$((attempt + 1))
    - done
    - echo "Setting up workspace in VM..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89") "sudo umount '/Volumes/My Shared Files' || true; mkdir -p ~/workspace; mount_virtiofs com.apple.virtio-fs.automount ~/workspace"
    - echo "Running tests..."
    - sshpass -p admin ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null admin@$(tart ip "bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89") 'cd ~/workspace/workspace && ./scripts/runner.node.mjs --step=darwin-x64-build-bun'
    - tart delete bun-test-1748055673002-f6331386-dfae-439c-bf47-acd2404f3f89
  
- 
    key: release
    label: ":rocket:"
    agents:
      queue: darwin
    depends_on:
    - darwin-aarch64-build-bun
    - darwin-x64-build-bun
    env:
      CANARY: 1
    command: ".buildkite/scripts/upload-release.sh"
  
- 
    key: benchmark
    label: 📊
    agents:
      queue: darwin
    depends_on: "linux-x64-build-bun"
    command: "node .buildkite/scripts/upload-benchmark.mjs"
  
